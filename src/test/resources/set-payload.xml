<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:assert="http://www.mulesoft.org/schema/mule/assert" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/assert http://www.mulesoft.org/schema/mule/munit/current/mule-assert.xsd ">
  <munit:test name="MockJsonPayload" description="MyNewDescription3">
    <assert:that message="oops!" is="'#[['value 1','value 2']]" expression="#[payload]" />
    <assert:that message="oops!" expression="#[payload]" is="#[nullValue()]" />
    <assert:that message="oops!" expression="#[payload]" is="#[not(nullValue())]" />
    <assert:that message="oops!" is="#['expected']" expression="#['actual_value']" />
    <assert:that message="oops!" is="#[not('')]" expression="#[payload]" />
    <assert:that message="oops!" expression="#[ 1 != 1 || payload.length != 0]" is="#[false]" />
    <assert:that message="oops!" expression="#[#[ 1 == 1 &amp;&amp; payload.length == 0]]" doc:name="Assert True" is="#[true]" />
    <assert:fail message="This should not happen" />
    <assert:run-custom assertion-ref="#[new your.package.CustomAssertion()]" />
  </munit:test>
  <munit:test name="MockJsonPayload" description="MyNewDescription3">
    <assert:that is="#[]" expression="#[]" doc:name="Assert Equals" />
    <assert:that expression="#[]" doc:name="Assert False" is="#[false]" />
    <assert:that is="#[not()]" expression="#[]" doc:name="Assert Not Equals" />
    <assert:that doc:name="Assert Not Null Payload" expression="#[payload]" is="#[not(nullValue())]" />
    <assert:that doc:name="Assert Null Payload" expression="#[payload]" is="#[nullValue()]" />
    <assert:that is="#[]" doc:name="Assert Payload" expression="#[payload]" />
    <assert:that expression="#[]" doc:name="Assert True" is="#[true]" />
    <assert:run-custom assertion-ref="" doc:name="Custom Assertion" />
  </munit:test>
  <munit:test name="MockJsonPayload" description="MyNewDescription3">
    <munit:set-event>
      <munit:inbound-properties>
        <munit:inbound-property key="prop_key" value="prop_value" encoding="UTF-8" mediaType="text/plain" />
      </munit:inbound-properties>
      <munit:session-properties>
        <munit:session-property key="prop_key" value="prop_value" encoding="UTF-8" mediaType="text/plain" />
      </munit:session-properties>
      <munit:outbound-properties>
        <munit:outbound-property key="prop_key" value="prop_value" encoding="UTF-8" mediaType="text/plain" />
      </munit:outbound-properties>
      <munit:payload value="a simple payload" encoding="UTF-8" mediaType="text/plain" />
    </munit:set-event>
  </munit:test>
  <munit:test name="MockJsonPayload" description="MyNewDescription3">
    <munit:set-event>
      <munit:variables>
        <munit:variable key="prop_key" value="prop_value" encoding="UTF-8" mediaType="text/plain" />
      </munit:variables>
      <munit:inbound-properties>
        <munit:inbound-property key="prop_key" value="prop_value" encoding="UTF-8" />
      </munit:inbound-properties>
      <munit:session-properties>
        <munit:session-property key="prop_key" value="prop_value" mediaType="text/plain" />
      </munit:session-properties>
      <munit:payload value="a simple payload" encoding="UTF-8" mediaType="text/plain" />
    </munit:set-event>
  </munit:test>
  <munit:test name="MockJsonPayload" description="MyNewDescription3">
    <munit:set-event>
      <munit:payload value="a simple payload" encoding="UTF-8" mediaType="text/plain" />
    </munit:set-event>
  </munit:test>
  <munit:test name="MockJsonPayload" description="MyNewDescription3">
    <munit:set-event>
      <munit:payload value="a simple payload" encoding="UTF-8" />
    </munit:set-event>
  </munit:test>
</mule>
